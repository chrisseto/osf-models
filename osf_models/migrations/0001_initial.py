# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-09-07 14:32
from __future__ import unicode_literals

import dirtyfields.dirtyfields
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import functools
import osf_models.models.comment
import osf_models.models.conference
import osf_models.models.identifiers
import osf_models.models.sanctions
import osf_models.models.user
import osf_models.models.validators
import osf_models.utils.datetime_aware_jsonfield
import osf_models.utils.security
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='OSFUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=255)),
                ('is_registered', models.BooleanField(db_index=True, default=False)),
                ('is_claimed', models.BooleanField(db_index=True, default=False)),
                ('security_messages', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('is_invited', models.BooleanField(db_index=True, default=False)),
                ('unclaimed_records', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('contributor_added_email_records', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('verification_key', models.CharField(blank=True, max_length=255, null=True)),
                ('emails', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None)),
                ('email_verifications', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('mailing_lists', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('mailchimp_mailing_lists', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('osf_mailing_lists', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=osf_models.models.user.get_default_mailing_lists)),
                ('date_registered', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('given_name', models.CharField(blank=True, max_length=255)),
                ('middle_names', models.CharField(blank=True, max_length=255)),
                ('family_name', models.CharField(blank=True, max_length=255)),
                ('suffix', models.CharField(blank=True, max_length=255)),
                ('jobs', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list)),
                ('schools', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=list)),
                ('social', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('piwik_token', models.CharField(blank=True, max_length=255)),
                ('date_last_login', models.DateTimeField(blank=True, null=True)),
                ('date_confirmed', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('date_disabled', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('comments_viewed_timestamp', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('timezone', models.CharField(default=b'Etc/UTC', max_length=255)),
                ('locale', models.CharField(default=b'en_US', max_length=255)),
                ('requested_deactivation', models.BooleanField(default=False)),
                ('notifications_configured', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AbstractNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(db_index=True, max_length=255)),
                ('category', models.CharField(blank=True, choices=[(b'', b'Uncategorized'), (b'communication', b'Communication'), (b'hypothesis', b'Hypothesis'), (b'data', b'Data'), (b'instrumentation', b'Instrumentation'), (b'methods and measures', b'Methods and Measures'), (b'analysis', b'Analysis'), (b'project', b'Project'), (b'other', b'Other'), (b'procedure', b'Procedure'), (b'software', b'Software')], default=b'', max_length=255)),
                ('child_node_subscriptions', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default=b'')),
                ('file_guid_to_share_uuids', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('forked_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_fork', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('piwik_site_id', models.IntegerField(blank=True, null=True)),
                ('public_comments', models.BooleanField(default=True)),
                ('suspended', models.BooleanField(db_index=True, default=False)),
                ('title', models.TextField(validators=[osf_models.models.validators.validate_title])),
                ('wiki_pages_current', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('wiki_pages_versions', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('wiki_private_uuids', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('registered_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('registered_meta', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict, null=True)),
            ],
            bases=(osf_models.models.identifiers.IdentifierMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AlternativeCitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('text', models.CharField(max_length=2048)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('client_secret', models.CharField(default=functools.partial(osf_models.utils.security.random_string, *(), **{b'length': 40}), max_length=40)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('home_url', models.URLField()),
                ('callback_url', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2PersonalToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(default=functools.partial(osf_models.utils.security.random_string, *(), **{b'length': 70}), max_length=70, unique=True)),
                ('name', models.CharField(db_index=True, max_length=25)),
                ('scopes', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApiOAuth2Scope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('done', models.BooleanField(default=False, verbose_name=b'completed')),
                ('sent', models.BooleanField(default=False, verbose_name=b'emails sent')),
                ('status', models.CharField(default=b'INITIATED', max_length=40)),
                ('datetime_initiated', models.DateTimeField(default=django.utils.timezone.now, verbose_name=b'initiated at')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2048)),
                ('status', models.CharField(default=b'INITIATED', max_length=40)),
                ('stat_result', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True)),
                ('errors', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=list, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlackListGuid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CitationStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(db_index=True, max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('date_parsed', models.DateTimeField(default=django.utils.timezone.now)),
                ('short_title', models.CharField(max_length=2048)),
                ('summary', models.CharField(max_length=4200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_bookmark_collection', models.BooleanField(db_index=True, default=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('title', models.TextField(validators=[osf_models.models.validators.validate_title])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('root_target_id', models.PositiveIntegerField(null=True)),
                ('target_id', models.PositiveIntegerField(null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('page', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField(blank=True, max_length=500)),
                ('ever_mentioned', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, default=list, size=None)),
            ],
            options={
                'abstract': False,
            },
            bases=(osf_models.models.comment.SpamMixin, osf_models.models.comment.CommentableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(db_index=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('info_url', models.URLField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=2048)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('public_projects', models.BooleanField(default=True)),
                ('poster', models.BooleanField(default=True)),
                ('talk', models.BooleanField(default=True)),
                ('field_names', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=osf_models.models.conference.get_default_field_names)),
                ('num_submissions', models.IntegerField(default=0)),
                ('admins', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf_models.AbstractNode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DraftRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_initiated', models.DateTimeField(default=django.utils.timezone.now)),
                ('datetime_updated', models.DateTimeField(auto_now=True)),
                ('registration_metadata', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('_metaschema_flags', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DraftRegistrationApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_state', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'), (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved', max_length=255)),
                ('meta', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DraftRegistrationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('action', models.CharField(max_length=255)),
                ('draft', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='osf_models.DraftRegistration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Embargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_state', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'), (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved', max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('for_existing_registration', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(osf_models.models.sanctions.PreregCallbackMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EmbargoTerminationApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_state', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'), (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved', max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oauth_key', models.CharField(blank=True, max_length=255, null=True)),
                ('oauth_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('scopes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), blank=True, default=list, size=None)),
                ('provider', models.CharField(max_length=50)),
                ('provider_name', models.CharField(max_length=255)),
                ('provider_id', models.CharField(max_length=255)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guid',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('guid', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('object_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.CharField(max_length=10)),
                ('value', models.CharField(max_length=50)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_identifier', to='osf_models.Guid')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_url', models.URLField(null=True)),
                ('banner_name', models.CharField(max_length=255, null=True)),
                ('domains', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None)),
                ('email_domains', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), db_index=True, null=True, size=None)),
                ('logo_name', models.CharField(max_length=255, null=True)),
                ('logout_url', models.URLField(null=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstitutionalContributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='osf_models.Institution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MailRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField()),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_mailrecord', to='osf_models.Guid')),
                ('users_created', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetaSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('schema', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=dict)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('schema_version', models.IntegerField()),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_metaschema', to='osf_models.Guid')),
            ],
        ),
        migrations.CreateModel(
            name='NodeLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_id', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=256, unique=True)),
                ('text', models.TextField()),
                ('properties', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), blank=True, default=list, size=None)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_nodelicense', to='osf_models.Guid')),
            ],
        ),
        migrations.CreateModel(
            name='NodeLicenseRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=128)),
                ('copyright_holders', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), blank=True, default=list, size=None)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_nodelicenserecord', to='osf_models.Guid')),
                ('node_license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='osf_models.NodeLicense')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NodeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True)),
                ('action', models.CharField(choices=[(b'checked_in', b'CHECKED_IN'), (b'checked_out', b'CHECKED_OUT'), (b'file_tag_removed', b'FILE_TAG_REMOVED'), (b'file_tag_added', b'FILE_TAG_ADDED'), (b'created_from', b'CREATED_FROM'), (b'project_created', b'PROJECT_CREATED'), (b'project_registered', b'PROJECT_REGISTERED'), (b'project_deleted', b'PROJECT_DELETED'), (b'node_created', b'NODE_CREATED'), (b'node_forked', b'NODE_FORKED'), (b'node_removed', b'NODE_REMOVED'), (b'pointer_created', b'POINTER_CREATED'), (b'pointer_forked', b'POINTER_FORKED'), (b'pointer_removed', b'POINTER_REMOVED'), (b'wiki_updated', b'WIKI_UPDATED'), (b'wiki_deleted', b'WIKI_DELETED'), (b'wiki_renamed', b'WIKI_RENAMED'), (b'made_wiki_public', b'MADE_WIKI_PUBLIC'), (b'made_wiki_private', b'MADE_WIKI_PRIVATE'), (b'contributor_added', b'CONTRIBUTOR_ADDED'), (b'contributor_removed', b'CONTRIBUTOR_REMOVED'), (b'contributors_reordered', b'CONTRIBUTORS_REORDERED'), (b'permissions_updated', b'PERMISSIONS_UPDATED'), (b'made_private', b'MADE_PRIVATE'), (b'made_public', b'MADE_PUBLIC'), (b'tag_added', b'TAG_ADDED'), (b'tag_removed', b'TAG_REMOVED'), (b'edit_title', b'EDIT_TITLE'), (b'edit_description', b'EDIT_DESCRIPTION'), (b'updated_fields', b'UPDATED_FIELDS'), (b'addon_file_moved', b'ADDON_FILE_MOVED'), (b'addon_file_copied', b'ADDON_FILE_COPIED'), (b'folder_created', b'FOLDER_CREATED'), (b'file_added', b'FILE_ADDED'), (b'file_updated', b'FILE_UPDATED'), (b'file_removed', b'FILE_REMOVED'), (b'file_restored', b'FILE_RESTORED'), (b'addon_added', b'ADDON_ADDED'), (b'addon_removed', b'ADDON_REMOVED'), (b'comment_added', b'COMMENT_ADDED'), (b'comment_removed', b'COMMENT_REMOVED'), (b'comment_updated', b'COMMENT_UPDATED'), (b'made_contributor_visible', b'MADE_CONTRIBUTOR_VISIBLE'), (b'made_contributor_invisible', b'MADE_CONTRIBUTOR_INVISIBLE'), (b'external_ids_added', b'EXTERNAL_IDS_ADDED'), (b'embargo_approved', b'EMBARGO_APPROVED'), (b'embargo_terminated', b'EMBARGO_TERMINATED'), (b'embargo_cancelled', b'EMBARGO_CANCELLED'), (b'embargo_completed', b'EMBARGO_COMPLETED'), (b'embargo_initiated', b'EMBARGO_INITIATED'), (b'retraction_approved', b'RETRACTION_APPROVED'), (b'retraction_cancelled', b'RETRACTION_CANCELLED'), (b'retraction_initiated', b'RETRACTION_INITIATED'), (b'registration_cancelled', b'REGISTRATION_CANCELLED'), (b'registration_initiated', b'REGISTRATION_INITIATED'), (b'registration_approved', b'REGISTRATION_APPROVED'), (b'prereg_registration_initiated', b'PREREG_REGISTRATION_INITIATED'), (b'citation_added', b'CITATION_ADDED'), (b'citation_edited', b'CITATION_EDITED'), (b'citation_removed', b'CITATION_REMOVED'), (b'affiliated_institution_added', b'AFFILIATED_INSTITUTION_ADDED'), (b'affiliated_institution_removed', b'AFFILIATED_INSTITUTION_REMOVED')], db_index=True, max_length=255)),
                ('params', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(default=dict)),
                ('should_hide', models.BooleanField(default=False)),
                ('foreign_user', models.CharField(blank=True, max_length=255, null=True)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_nodelog', to='osf_models.Guid')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='osf_models.AbstractNode')),
                ('original_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.AbstractNode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'get_latest_by': 'date',
            },
        ),
        migrations.CreateModel(
            name='NodeWikiPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_name', models.CharField(max_length=200, validators=[osf_models.models.validators.validate_page_name])),
                ('version', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('content', models.TextField(default=b'')),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_nodewikipage', to='osf_models.Guid')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('send_type', models.CharField(db_index=True, max_length=50, validators=[osf_models.models.validators.validate_subscription_type])),
                ('event', models.CharField(max_length=50)),
                ('message', models.CharField(max_length=2048)),
                ('node_lineage', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=5), size=None)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_notificationdigest', to='osf_models.Guid')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(db_index=True, max_length=50)),
                ('event_name', models.CharField(max_length=50)),
                ('email_digest', models.ManyToManyField(related_name='_notificationsubscription_email_digest_+', to=settings.AUTH_USER_MODEL)),
                ('email_transactional', models.ManyToManyField(related_name='_notificationsubscription_email_transactional_+', to=settings.AUTH_USER_MODEL)),
                ('none', models.ManyToManyField(related_name='_notificationsubscription_none_+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrivateLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('key', models.CharField(max_length=512, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('anonymous', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_privatelink', to='osf_models.Guid')),
                ('nodes', models.ManyToManyField(related_name='private_links', to='osf_models.AbstractNode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QueuedMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_addr', models.CharField(max_length=255)),
                ('send_at', models.DateTimeField(db_index=True)),
                ('email_type', models.CharField(db_index=True, max_length=255)),
                ('data', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('sent_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_queuedmail', to='osf_models.Guid')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecentlyAddedContributor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recently_added_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_state', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'), (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved', max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_registrationapproval', to='osf_models.Guid')),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(osf_models.models.sanctions.PreregCallbackMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Retraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_state', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('end_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiation_date', models.DateTimeField(blank=True, null=True)),
                ('state', models.CharField(choices=[(b'unapproved', b'Unapproved'), (b'approved', b'Approved'), (b'rejected', b'Rejected'), (b'completed', b'Completed')], default=b'unapproved', max_length=255)),
                ('notify_initiator_on_complete', models.BooleanField(default=False)),
                ('stashed_urls', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('justification', models.CharField(blank=True, max_length=2048, null=True)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_retraction', to='osf_models.Guid')),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('data', osf_models.utils.datetime_aware_jsonfield.DateTimeAwareJSONField(blank=True, default=dict)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_session', to='osf_models.Guid')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=1024)),
                ('system', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WatchConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digest', models.BooleanField(default=False)),
                ('immediate', models.BooleanField(default=False)),
                ('guid', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_watchconfig', to='osf_models.Guid')),
                ('node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='osf_models.AbstractNode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'system')]),
        ),
        migrations.AddField(
            model_name='institution',
            name='contributors',
            field=models.ManyToManyField(related_name='institutions', through='osf_models.InstitutionalContributor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='institution',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_institution', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='externalaccount',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_externalaccount', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='embargoterminationapproval',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_embargoterminationapproval', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='embargoterminationapproval',
            name='initiated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='embargo',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_embargo', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='embargo',
            name='initiated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draftregistrationlog',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_draftregistrationlog', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='draftregistrationlog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draftregistrationapproval',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_draftregistrationapproval', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.DraftRegistrationApproval'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_draftregistration', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='initiator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='registration_schema',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.MetaSchema'),
        ),
        migrations.AddField(
            model_name='conference',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_conference', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='comment',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_comment', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='comment',
            name='root_target_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='root_comments', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='comment',
            name='target_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_collection', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='collection',
            name='linked_nodes',
            field=models.ManyToManyField(to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archivetarget',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_archivetarget', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_archivejob', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='initiator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='target_addons',
            field=models.ManyToManyField(to='osf_models.ArchiveTarget'),
        ),
        migrations.AddField(
            model_name='apioauth2scope',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_apioauth2scope', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='apioauth2personaltoken',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_apioauth2personaltoken', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='apioauth2personaltoken',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='apioauth2application',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_apioauth2application', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='apioauth2application',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alternativecitation',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_alternativecitation', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='_contributors',
            field=models.ManyToManyField(related_name='nodes', through='osf_models.Contributor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='affiliated_institutions',
            field=models.ManyToManyField(related_name='nodes', to='osf_models.Institution'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='alternative_citations',
            field=models.ManyToManyField(related_name='nodes', to='osf_models.AlternativeCitation'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='embargo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='osf_models.Embargo'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='embargo_termination_approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='osf_models.EmbargoTerminationApproval'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='forked_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forks', to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_abstractnode', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='linked_nodes',
            field=models.ManyToManyField(to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='node_license',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nodes', to='osf_models.NodeLicenseRecord'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='parent_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nodes', to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='primary_institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_nodes', to='osf_models.Institution'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_from',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_schema',
            field=models.ManyToManyField(null=True, to='osf_models.MetaSchema'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registered_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_to', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='registration_approval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='osf_models.RegistrationApproval'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='retraction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registrations', to='osf_models.Retraction'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='root',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absolute_parent', to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='tags',
            field=models.ManyToManyField(related_name='tagged', to='osf_models.Tag'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='template_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templated_from', to='osf_models.AbstractNode'),
        ),
        migrations.AddField(
            model_name='abstractnode',
            name='users_watching_node',
            field=models.ManyToManyField(related_name='watching', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='affiliated_institutions',
            field=models.ManyToManyField(to='osf_models.Institution'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='external_accounts',
            field=models.ManyToManyField(to='osf_models.ExternalAccount'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='guid',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referent_osfuser', to='osf_models.Guid'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='merged_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='merger', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='recently_added',
            field=models.ManyToManyField(through='osf_models.RecentlyAddedContributor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='tags',
            field=models.ManyToManyField(to='osf_models.Tag'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='osfuser',
            name='watched',
            field=models.ManyToManyField(related_name='watches', through='osf_models.WatchConfig', to='osf_models.AbstractNode'),
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('osf_models.abstractnode',),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('osf_models.abstractnode',),
        ),
        migrations.AlterUniqueTogether(
            name='watchconfig',
            unique_together=set([('user', 'node')]),
        ),
        migrations.AlterUniqueTogether(
            name='recentlyaddedcontributor',
            unique_together=set([('user', 'contributor')]),
        ),
        migrations.AddField(
            model_name='notificationsubscription',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_subscriptions', to='osf_models.Node'),
        ),
        migrations.AddField(
            model_name='nodewikipage',
            name='node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.Node'),
        ),
        migrations.AlterUniqueTogether(
            name='nodelicense',
            unique_together=set([('guid', 'license_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='metaschema',
            unique_together=set([('name', 'schema_version', 'guid')]),
        ),
        migrations.AddField(
            model_name='mailrecord',
            name='nodes_created',
            field=models.ManyToManyField(to='osf_models.Node'),
        ),
        migrations.AlterUniqueTogether(
            name='institutionalcontributor',
            unique_together=set([('user', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='identifier',
            unique_together=set([('object_id', 'content_type', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='externalaccount',
            unique_together=set([('provider', 'provider_id')]),
        ),
        migrations.AddField(
            model_name='embargoterminationapproval',
            name='embargoed_registration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.Registration'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='branched_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registered_draft', to='osf_models.Node'),
        ),
        migrations.AddField(
            model_name='draftregistration',
            name='registered_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='draft_registration', to='osf_models.Registration'),
        ),
        migrations.AlterUniqueTogether(
            name='contributor',
            unique_together=set([('user', 'node')]),
        ),
        migrations.AlterOrderWithRespectTo(
            name='contributor',
            order_with_respect_to='node',
        ),
        migrations.AddField(
            model_name='comment',
            name='node',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.Node'),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='dst_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='archive_jobs', to='osf_models.Registration', verbose_name=b'destination node'),
        ),
        migrations.AddField(
            model_name='archivejob',
            name='src_node',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='osf_models.Node', verbose_name=b'source node'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='abstractnode',
            order_with_respect_to='parent_node',
        ),
    ]
